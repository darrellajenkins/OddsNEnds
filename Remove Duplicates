# My code to remove duplicate numbers from a list.  In principle this can also be used for txt, csv, dict, or other data such as from web content.

numlist = [12, 46, 41, 52, 89, 4, 81, 63, 22, 103, 215, 12, 312, 70, 12]
for num in numlist:
    if numlist.count(num) > 1:
        numlist.remove(num)
print(numlist)

# Another way of removing list duplicates (dev 01/21/24).  This new way, unlike
# the orig way, preserves the orig order of items in the list:
coffee = [962, 205, 839, 457, 584, 751, 532, 878, 777, 498, 962, 839, 584, 532, 777]
for e in coffee[::-1]:
    if coffee.count(e) > 1:
        pos = len(coffee) - coffee[::-1].index(e) - 1
        del coffee[pos]
print(coffee)

# By far, the FASTEST way to remove duplicates (dev 01/21/24) from a list is to use a set, HOWEVER,
# since it is a set its content will be created in a random order:
espresso = [20, 24, 169, 934, 555, 443, 815, 865, 750, 517, 405, 904, 907, 520, 411, 20, 169, 555, 815, 750, 405, 907]
espresso_set = set((espresso))
print(espresso_set)

# Another helpful tool is how to remove all occurrences of an value (dev 01/21/24) by using a while loop, 
# But this can also be used to remove duplicates:
numbers = [2,2,2,5,8,9,2,3,2,6,7]
while 2 in numbers:
        numbers.remove(2)
numbers.insert(0, 2)
print(numbers)
